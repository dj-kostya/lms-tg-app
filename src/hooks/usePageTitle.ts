import { useMemo } from 'react';
import { useLocation } from 'react-router-dom';
import { routes } from '@/navigation/routes';
import { findCourseById, findLessonById } from '@/data/mockData';

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * @returns –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
 */
export function usePageTitle() {
  const location = useLocation();

  const pageInfo = useMemo(() => {
    const pathname = location.pathname;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –∏–∑ routes
    const route = routes.find(r => {
      if (r.path.includes(':')) {
        // –î–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
        const routeParts = r.path.split('/');
        const pathParts = pathname.split('/');
        
        if (routeParts.length !== pathParts.length) return false;
        
        return routeParts.every((part, index) => {
          return part.startsWith(':') || part === pathParts[index];
        });
      }
      return r.path === pathname;
    });

    if (route) {
      // –ï—Å–ª–∏ —É –º–∞—Ä—à—Ä—É—Ç–∞ –µ—Å—Ç—å title, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
      if (route.title) {
        return {
          title: route.title,
          subtitle: null,
          icon: route.icon
        };
      }

      // –î–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –∫—É—Ä—Å–æ–≤
      if (pathname.startsWith('/education/course/') && !pathname.includes('/lesson/')) {
        const courseId = pathname.split('/')[3];
        const course = findCourseById(courseId);
        if (course) {
          return {
            title: course.title,
            subtitle: '–ö—É—Ä—Å',
            icon: 'üìö'
          };
        }
      }

      // –î–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü —É—Ä–æ–∫–æ–≤
      if (pathname.includes('/lesson/')) {
        const pathParts = pathname.split('/');
        const courseId = pathParts[3];
        const lessonId = pathParts[5];
        
        const course = findCourseById(courseId);
        const lesson = findLessonById(lessonId);
        
        if (course && lesson) {
          return {
            title: lesson.title,
            subtitle: course.title,
            icon: getLessonIcon(lesson.type)
          };
        }
      }
    }

    // Fallback –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    return {
      title: '–û–±—É—á–µ–Ω–∏–µ',
      subtitle: null,
      icon: 'üìö'
    };
  }, [location.pathname]);

  return pageInfo;
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ —É—Ä–æ–∫–∞
 */
function getLessonIcon(type: string): string {
  switch (type) {
    case 'video': return 'üé•';
    case 'text': return 'üìÑ';
    case 'quiz': return '‚ùì';
    case 'practice': return 'üíª';
    default: return 'üìö';
  }
}
