import { createContext, useContext, ReactNode } from 'react';
import { useAuth, type AuthContextType } from '@/hooks/useAuth';

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const AuthContext = createContext<AuthContextType | undefined>(undefined);

export interface AuthProviderProps {
  children: ReactNode;
}

/**
 * –ü—Ä–æ–≤–∞–π–¥–µ—Ä –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç
 * –∫–æ–Ω—Ç–µ–∫—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—Å–µ–º –¥–æ—á–µ—Ä–Ω–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º
 */
export function AuthProvider({ children }: AuthProviderProps) {
  const auth = useAuth();

  return (
    <AuthContext.Provider value={auth}>
      {children}
    </AuthContext.Provider>
  );
}

/**
 * –•—É–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 * @returns –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 * @throws Error –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω–µ AuthProvider
 */
export function useAuthContext(): AuthContextType {
  const context = useContext(AuthContext);
  if (context === undefined) {
    throw new Error('useAuthContext must be used within an AuthProvider');
  }
  return context;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
export function AuthLoadingScreen() {
  return (
    <div style={{
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      height: '100vh',
      gap: '16px',
    }}>
      <div style={{
        width: '40px',
        height: '40px',
        border: '4px solid #f3f3f3',
        borderTop: '4px solid #3498db',
        borderRadius: '50%',
        animation: 'spin 1s linear infinite',
      }} />
      <p>–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...</p>
      <style>{`
        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }
      `}</style>
    </div>
  );
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 */
export function AuthErrorScreen({ error, onRetry }: { error: string; onRetry: () => void }) {
  const isCorsError = error.includes('CORS') || error.includes('fetch');
  
  return (
    <div style={{
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center',
      height: '100vh',
      gap: '16px',
      padding: '20px',
      textAlign: 'center',
    }}>
      <div style={{ fontSize: '48px' }}>{isCorsError ? 'üîß' : '‚ö†Ô∏è'}</div>
      <h2>{isCorsError ? '–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏' : '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'}</h2>
      <p style={{ color: '#666', maxWidth: '300px' }}>
        {isCorsError 
          ? '–°–µ—Ä–≤–µ—Ä –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –º–æ–∫-–¥–∞–Ω–Ω—ã–º–∏.'
          : error
        }
      </p>
      <button
        onClick={onRetry}
        style={{
          padding: '12px 24px',
          backgroundColor: isCorsError ? '#28a745' : '#3498db',
          color: 'white',
          border: 'none',
          borderRadius: '8px',
          cursor: 'pointer',
          fontSize: '16px',
        }}
      >
        {isCorsError ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å –º–æ–∫-–¥–∞–Ω–Ω—ã–º–∏' : '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞'}
      </button>
    </div>
  );
}
