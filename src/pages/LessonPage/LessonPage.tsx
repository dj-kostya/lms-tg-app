import type { FC } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { 
  Button, 
  List, 
  Section, 
  Placeholder,
  Text,
  Title,
  Cell,
  Navigation,
  Avatar
} from '@telegram-apps/telegram-ui';
import { Page } from '@/components/Page.tsx';
import { SimpleHeader } from '@/components/Header';
import { findCourseById, findSchoolByCourseId } from '@/data/mockData';
import type { Lesson } from '@/types';

import './LessonPage.css';

export const LessonPage: FC = () => {
  const { courseId, lessonId } = useParams();
  const navigate = useNavigate();

  if (!courseId || !lessonId) {
    return (
      <Page back={true}>
        <Placeholder
          header="–û—à–∏–±–∫–∞"
          description="ID –∫—É—Ä—Å–∞ –∏–ª–∏ —É—Ä–æ–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω"
        />
      </Page>
    );
  }

  const course = findCourseById(courseId);
  const school = findSchoolByCourseId(courseId);

  if (!course) {
    return (
      <Page back={true}>
        <Placeholder
          header="–ö—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
          description={`–ö—É—Ä—Å —Å ID "${courseId}" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`}
        />
      </Page>
    );
  }

  const lesson = course.lessons?.find(l => l.id === lessonId);

  if (!lesson) {
    return (
      <Page back={true}>
        <Placeholder
          header="–£—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"
          description={`–£—Ä–æ–∫ —Å ID "${lessonId}" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫—É—Ä—Å–µ "${course.title}"`}
        />
      </Page>
    );
  }

  const getLessonTypeIcon = (type: Lesson['type']) => {
    switch (type) {
      case 'video': return 'üé•';
      case 'text': return 'üìñ';
      case 'quiz': return '‚ùì';
      case 'practice': return 'üíª';
      default: return 'üìö';
    }
  };

  const getLessonTypeText = (type: Lesson['type']) => {
    switch (type) {
      case 'video': return '–í–∏–¥–µ–æ —É—Ä–æ–∫';
      case 'text': return '–¢–µ–∫—Å—Ç–æ–≤—ã–π —É—Ä–æ–∫';
      case 'quiz': return '–¢–µ—Å—Ç';
      case 'practice': return '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ';
      default: return '–£—Ä–æ–∫';
    }
  };

  const handleStartLesson = () => {
    // TODO: Implement lesson start logic
    console.log('Starting lesson:', lesson.id);
  };

  const handleCompleteLesson = () => {
    // TODO: Implement lesson completion logic
    console.log('Completing lesson:', lesson.id);
  };

  return (
    <Page back={true}>
      <SimpleHeader className="lesson-page-header" />
      <div className="lesson-page">
        <List>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É—Ä–æ–∫–∞ */}
          <Section>
            <div className="lesson-header">
              <div className="lesson-type-badge">
                <span className="lesson-type-icon">{getLessonTypeIcon(lesson.type)}</span>
                <span className="lesson-type-text">{getLessonTypeText(lesson.type)}</span>
              </div>
              <Title level="2" className="lesson-title">
                {lesson.title}
              </Title>
              <Text className="lesson-duration">
                ‚è±Ô∏è {lesson.duration}
              </Text>
            </div>
          </Section>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ */}
          <Section header={<Section.Header>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ</Section.Header>}>
            <Cell
              before={
                course.imageUrl ? (
                  <Avatar src={course.imageUrl} size={48} />
                ) : (
                  <div className="course-avatar-placeholder">
                    üìö
                  </div>
                )
              }
              after={<Navigation />}
              subtitle={school?.name}
              onClick={() => navigate(`/education/course/${course.id}`)}
            >
              <Title level="3">{course.title}</Title>
            </Cell>
          </Section>

          {/* –û–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞ */}
          <Section header={<Section.Header>–û–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–∞</Section.Header>}>
            <Text className="lesson-description">
              {lesson.description}
            </Text>
          </Section>

          {/* –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ */}
          <Section header={<Section.Header>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —É—Ä–æ–∫–∞</Section.Header>}>
            {lesson.type === 'video' && (
              <div className="lesson-content">
                <div className="video-placeholder">
                  <div className="video-icon">üé•</div>
                  <Text>–í–∏–¥–µ–æ —É—Ä–æ–∫ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –∑–¥–µ—Å—å</Text>
                  <Text className="video-note">
                    –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å —É—Ä–æ–∫" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                  </Text>
                </div>
              </div>
            )}

            {lesson.type === 'text' && (
              <div className="lesson-content">
                <div className="text-content">
                  <Text>
                    –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª —É—Ä–æ–∫–∞. 
                    –í—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∞—Ç—å –µ–≥–æ –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è –≤–∞—Å —Ç–µ–º–ø–µ.
                  </Text>
                  <Text className="text-note">
                    –ú–∞—Ç–µ—Ä–∏–∞–ª –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–ù–∞—á–∞—Ç—å —É—Ä–æ–∫"
                  </Text>
                </div>
              </div>
            )}

            {lesson.type === 'quiz' && (
              <div className="lesson-content">
                <div className="quiz-content">
                  <Text>
                    –≠—Ç–æ—Ç —É—Ä–æ–∫ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞—à–∏—Ö –∑–Ω–∞–Ω–∏–π.
                  </Text>
                  <Text className="quiz-note">
                    –¢–µ—Å—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–ù–∞—á–∞—Ç—å —É—Ä–æ–∫"
                  </Text>
                </div>
              </div>
            )}

            {lesson.type === 'practice' && (
              <div className="lesson-content">
                <div className="practice-content">
                  <Text>
                    –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞.
                  </Text>
                  <Text className="practice-note">
                    –ó–∞–¥–∞–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–ù–∞—á–∞—Ç—å —É—Ä–æ–∫"
                  </Text>
                </div>
              </div>
            )}
          </Section>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <Section>
            <div className="lesson-actions">
              <Button 
                size="l" 
                stretched
                className="start-lesson-button"
                onClick={handleStartLesson}
              >
                {lesson.isCompleted ? '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —É—Ä–æ–∫' : '–ù–∞—á–∞—Ç—å —É—Ä–æ–∫'}
              </Button>
              
              {!lesson.isCompleted && (
                <Button 
                  size="m" 
                  stretched
                  mode="outline"
                  className="complete-lesson-button"
                  onClick={handleCompleteLesson}
                >
                  –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
                </Button>
              )}
            </div>
          </Section>
        </List>
      </div>
    </Page>
  );
};
